datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String   
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Posts[]
  @@map("users")
}

model Categories {
  id        String   @id @default(uuid())
  name      String?
  icon      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Posts[]
  @@map("categories")
}

model Posts {
  id            String   @id @default(uuid())
  author_id     String
  author        User      @relation(fields: [author_id], references: [id])
  category_id   String
  category      Categories @relation(fields: [category_id], references: [id])
  title         String
  slug          String 
  body          String   @db.Text()
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  @@map("posts")
}

model Works {
  id          String   @id @default(uuid())
  company     String?
  position    String?
  place       String?
  description String   @db.Text()
  duration    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  @@map("works")
}

model PostView {
  id         String   @id @default(uuid())
  ip_name    String
  ip_address String
  count      Int?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  @@map("postView")
}

model Images {
  id        String   @id @default(uuid())
  path      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("images")
}

model Contents {
  id        String   @id @default(uuid())
  name      String?  @unique
  content   Json? 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("contents")
}
model Question {
  id           String   @id @default(uuid())
  email        String 
  name         String 
  question     String 
  description  String   @db.Text()
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("questions") 
}